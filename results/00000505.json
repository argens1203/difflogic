{
    "args": {
        "batch_size": 64,
        "compile_model": false,
        "connections": "unique",
        "dataset": "monk2",
        "deduplicate": true,
        "enc_type": "tot",
        "eval_freq": 1000,
        "experiment_id": 505,
        "explain": null,
        "explain_all": false,
        "explain_one": false,
        "grad_factor": 1.5,
        "implementation": "cuda",
        "learning_rate": 0.01,
        "load_model": true,
        "max_time": 3600,
        "model_path": "model-paths/$monk2_model.pth",
        "num_iterations": 5000,
        "num_layers": 6,
        "num_neurons": 12,
        "packbits_eval": false,
        "save_model": false,
        "seed": 0,
        "tau": 1,
        "training_bit_count": 32,
        "verbose": false,
        "xnum": 100
    },
    "cnf_size": 710,
    "deduplication": 23,
    "eid": 505,
    "encoding_time": 1746964247.2700338,
    "encoding_time_taken": 3.3708348274230957,
    "eq_size": 50,
    "formulas": [
        "~((((~(1 >> (11 >> 12)) ^ (7 | (3 ^ 4))) >> ~(7 | (3 ^ 4))) >> (~((8 ^ 9) ^ ~(13 ^ 14)) >> ~(1 & (11 >> 12)))) ^ ~((~((8 ^ 9) ^ ~(13 ^ 14)) >> (~4 ^ 16)) ^ ~((~4 ^ 8) & ~(1 >> (11 >> 12)))))",
        "~(~(((~(1 >> (11 >> 12)) ^ (7 | (3 ^ 4))) >> ~(7 | (3 ^ 4))) >> (((16 >> (9 >> 10)) & (~4 ^ 8)) ^ ((9 >> 10) >> (~4 ^ 16)))) | (((16 >> (9 >> 10)) & (~4 ^ 8)) & (~(1 & (11 >> 12)) ^ ~((8 ^ 9) ^ ~(13 ^ 14)))))",
        "~(~((~((8 ^ 9) ^ ~(13 ^ 14)) >> (~4 ^ 16)) ^ ~((~4 ^ 8) & ~(1 >> (11 >> 12)))) ^ ~(1 & (11 >> 12)))",
        "~((16 >> (9 >> 10)) & ~(1 >> (11 >> 12))) & (~((8 ^ 9) ^ ~(13 ^ 14)) >> (~4 ^ 16))",
        "~(~(~(7 >> ((3 ^ 4) | (8 ^ 9))) & ~(~((16 >> (9 >> 10)) & ~(1 >> (11 >> 12))) | ~((~4 ^ 8) & ~(1 >> (11 >> 12))))) & ~(~(~(1 & (11 >> 12)) >> (~(1 >> (11 >> 12)) ^ (7 | (3 ^ 4)))) ^ (7 | (3 ^ 4))))",
        "~(~(~(1 & (11 >> 12)) >> (((16 >> (9 >> 10)) & (~4 ^ 8)) ^ ((9 >> 10) >> (~4 ^ 16)))))",
        "(((16 >> (9 >> 10)) & (~4 ^ 8)) & (~(1 & (11 >> 12)) ^ ~((8 ^ 9) ^ ~(13 ^ 14)))) | ~(~((16 >> (9 >> 10)) & ~(1 >> (11 >> 12))) & (~((8 ^ 9) ^ ~(13 ^ 14)) >> (~4 ^ 16)))",
        "~((~((8 ^ 9) ^ ~(13 ^ 14)) >> (~4 ^ 16)) ^ ~((~4 ^ 8) & ~(1 >> (11 >> 12)))) ^ ~(1 & (11 >> 12))",
        "~(~(1 & (11 >> 12)) >> (((16 >> (9 >> 10)) & (~4 ^ 8)) ^ ((9 >> 10) >> (~4 ^ 16))))",
        "~((~((16 >> (9 >> 10)) & ~(1 >> (11 >> 12))) & (~((8 ^ 9) ^ ~(13 ^ 14)) >> (~4 ^ 16))) ^ (~(1 & (11 >> 12)) ^ ~((8 ^ 9) ^ ~(13 ^ 14))))",
        "~((~((16 >> (9 >> 10)) & ~(1 >> (11 >> 12))) & (~((8 ^ 9) ^ ~(13 ^ 14)) >> (~4 ^ 16))) ^ (~(1 & (11 >> 12)) ^ ~((8 ^ 9) ^ ~(13 ^ 14))))",
        "~(~(~(1 & (11 >> 12)) >> (~(1 >> (11 >> 12)) ^ (7 | (3 ^ 4)))) ^ (7 | (3 ^ 4))) | ~((~((8 ^ 9) ^ ~(13 ^ 14)) >> ~(1 & (11 >> 12))) ^ ~(~(1 & (11 >> 12)) >> (~(1 >> (11 >> 12)) ^ (7 | (3 ^ 4)))))"
    ],
    "init_time": 1746964243.885516,
    "mean_explain_count": 7.087962962962963,
    "mean_explain_time": 0.0035394514253293667,
    "memory_usage": 26978293,
    "model_complete_time": 1746964243.899199,
    "model_str": [
        "Sequential(\n  (0): LogicLayer(17, 12, train)\n  (1): LogicLayer(12, 12, train)\n  (2): LogicLayer(12, 12, train)\n  (3): LogicLayer(12, 12, train)\n  (4): LogicLayer(12, 12, train)\n  (5): LogicLayer(12, 12, train)\n  (6): GroupSum(k=2, tau=1)\n)"
    ],
    "path": "./results/",
    "save_time": 1746964258.177485,
    "server_name": "Argenss-MacBook-Pro",
    "total_num_neurons": [
        48
    ],
    "total_num_weights": [
        48
    ],
    "total_time": 14.291969060897827
}